name: Deploy

on:
  push:
    branches:
      - main
      - prod

  workflow_dispatch:

jobs:
  build_deploy:
    runs-on: ubuntu-22.04
    steps:
      - name: Clone repo
        uses: actions/checkout@v2
        with:
          path: source


      - name: Read php-version
        id: php-version
        uses: juliangruber/read-file-action@v1
        with:
          path: source/.php-version

      - name: Read node-version
        id: node-version
        uses: juliangruber/read-file-action@v1
        with:
          path: source/.node-version


      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ steps.php-version.outputs.content }}
          extensions: pdo_sqlite

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ steps.node-version.outputs.content }}


      - name: Cache NPM
        if: ${{ !env.ACT }}
        uses: actions/cache@v2
        with:
          path: source/node_modules
          key: ${{ runner.os }}-${{ hashFiles('source/package-lock.json') }}

      - name: Cache Composer
        if: ${{ !env.ACT }}
        uses: actions/cache@v2
        with:
          path: source/vendor
          key: ${{ runner.os }}-${{ hashFiles('source/composer.lock') }}


      - name: Copy .env file
        uses: up9cloud/action-rsync@v1.3
        env:
          HOST: ${{ secrets.SSH_HOST }}
          USER: ${{ secrets.SSH_USER }}
          KEY: ${{ secrets.SSH_KEY }}
          PORT: ${{ secrets.SSH_PORT }}
          MODE: pull
          SOURCE: ${{ secrets.REMOTE_PATH_PROD }}/.env  # TODO
          TARGET: ./source


      - name: Build source
        working-directory: source
        run: .github/scripts/build.sh


      - name: start deployment
        uses: bobheadxi/deployments@v0.4.3
        id: start_deploy
        with:
          step: start
          token: ${{ secrets.GITHUB_TOKEN }}
          env: staging # TODO

      - name: laravel down
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: cd ${{ secrets.REMOTE_PATH_MAIN }} ; bin/prod-php artisan down --render="errors::503" --secret="force-up"  # TODO
          use_insecure_cipher: true

      - name: deploy to server
        uses: easingthemes/ssh-deploy@main
        env:
          ARGS: "-a -c -v -z -h --exclude-from='application/.rsyncignore' --delete-after"
          REMOTE_HOST: ${{ secrets.SSH_HOST }}
          REMOTE_USER: ${{ secrets.SSH_USER }}
          SSH_PRIVATE_KEY: ${{ secrets.SSH_KEY }}
          TARGET: ${{ secrets.REMOTE_PATH_MAIN }}  # TODO
          SOURCE: application/

      - name: laravel cache
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: cd ${{ secrets.REMOTE_PATH_MAIN }} ; bin/prod-env  # TODO
          use_insecure_cipher: true

      - name: laravel up
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: cd ${{ secrets.REMOTE_PATH_MAIN }} ; bin/prod-php artisan up  # TODO
          use_insecure_cipher: true

      - name: update deployment status
        uses: bobheadxi/deployments@v0.4.3
        if: always()
        with:
          step: finish
          token: ${{ secrets.GITHUB_TOKEN }}
          status: ${{ job.status }}
          deployment_id: ${{ steps.start_deploy.outputs.deployment_id }}
          env_url: "${{ secrets.REMOTE_URL_MAIN }}"  # TODO
